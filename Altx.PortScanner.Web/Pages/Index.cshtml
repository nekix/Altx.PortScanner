@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container mt-4">
    <h2 class="mb-4">Start a New Port Scan</h2>
    
    <form method="post" class="needs-validation" novalidate>
        <div class="mb-3">
            <label for="hostName" class="form-label">Host IP</label>
            <input name="HostName" type="text" class="form-control" id="hostName" placeholder="Enter Host" required />
            <div class="invalid-feedback">Please provide a valid host.</div>
        </div>

        <div class="mb-3">
            <label for="startPort" class="form-label">Port Range</label>
            <input name="StartPort" type="number" class="form-control" id="startPort" required />
            <div class="invalid-feedback">Please provide a valid port start port.</div>
        </div>

        <div class="mb-3">
            <label for="endPort" class="form-label">Port Range</label>
            <input name="EndPort" type="number" class="form-control" id="endPort" required />
            <div class="invalid-feedback">Please provide a valid end port.</div>
        </div>

        <h4 class="mb-4">Select port scan type.</h2>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="tcpConnect" name="PortScanTypes" value="TCPConnect">
            <label class="form-check-label" for="tcpConnect">TCP Connect</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="tcpSyn" name="PortScanTypes" value="TCPSYN">
            <label class="form-check-label" for="tcpSyn">TCP SYN</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="udp" name="PortScanTypes" value="UDP">
            <label class="form-check-label" for="udp">UDP</label>
        </div>

@*         <div class="mb-3">
            <label for="scanMode" class="form-label">Scan Mode</label>
            <select class="form-select" id="scanMode" asp-for="ScanMode" required>
                <option value="" selected disabled>Choose scan mode</option>
                <option value="TCP Connect">TCP Connect</option>
                <option value="TCP SYN">TCP SYN</option>
                <option value="UDP">UDP</option>
            </select>
            <div class="invalid-feedback">Please select a scan mode.</div>
        </div> *@

        <button type="submit" class="btn btn-primary">Create Scan Task</button>
    </form>

    <h2 class="mt-5">Previous Scans</h2>
    
    <table class="table table-striped table-bordered mt-3">
        <thead class="table-dark">
            <tr>
                <th scope="col">Host IP</th>
                <th scope="col">Open Ports</th>
                <th scope="col">Start Time</th>
                <th scope="col">Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var scanTask in Model.ScanTasks)
            {
                <tr>
                    <td>@scanTask.HostName</td>
                    <td>@scanTask.OpenPortsCount</td>
                    <td>@scanTask.CreationTime</td>
                    <td><a class="btn btn-sm btn-info">View Details</a></td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const tcpConnect = document.getElementById('tcpConnect');
    const tcpSyn = document.getElementById('tcpSyn');
    const udp = document.getElementById('udp');

    function updateCheckboxes() {
        // Prevent both TCP checkboxes from being selected together
        if (tcpConnect.checked) {
            tcpSyn.disabled = true;
        } else {
            tcpSyn.disabled = false;
        }
        
        if (tcpSyn.checked) {
            tcpConnect.disabled = true;
        } else {
            tcpConnect.disabled = false;
        }
    }

    // Add event listeners to each checkbox
    tcpConnect.addEventListener('change', updateCheckboxes);
    tcpSyn.addEventListener('change', updateCheckboxes);
});
</script>